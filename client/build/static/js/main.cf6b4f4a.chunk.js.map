{"version":3,"sources":["components/CreateNewBike.js","components/UserListRent.js","components/Context/RideContext.js","components/UserListAvailableBike.js","App.js","serviceWorker.js","index.js"],"names":["CreateNewBike","useState","bike_name","setBikeName","bike_type","setBikeType","bike_price","setBikePrice","listBikeType","handlerChangeBikeName","e","a","target","value","handlerSelectType","handlerChangeBikePrice","isNaN","console","log","addNewBikeHandler","requestOptions","method","headers","body","JSON","stringify","fetch","catch","err","window","location","reload","Container","className","role","aria-label","Row","Col","FormControl","type","placeholder","onChange","DropdownButton","title","onSelect","variant","map","item","index","Dropdown","Item","eventKey","key","lg","Button","onClick","UserListRent","rentBikes","setRentBikes","handlerRentingBike","id","getAttribute","getBikes","useCallback","then","res","json","useEffect","length","bike","rent_hours","data-id","_id","RideTimeContext","createContext","hours","bikeId","rending","UserListAvailableBike","availableBikes","setAvailableBikes","rideHours","setRideHours","context","useContext","numbers","i","push","listItems","number","handlerDeleteBike","handlerSetTimeRide","as","custom","App","props","state","text","additional","tamp","active","handlerClickBtn","bind","setState","this","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.cf6b4f4a.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Col, Container, Row, FormControl, DropdownButton, Dropdown } from 'react-bootstrap';\r\n\r\nexport function CreateNewBike(){\r\n    const [bike_name, setBikeName] = useState(\"\");\r\n    const [bike_type, setBikeType] = useState(\"Custom\");\r\n    const [bike_price, setBikePrice] = useState(\"\");\r\n\r\n    const listBikeType = [\r\n        \"Mountain\",\r\n        \"Hybrid/Comfort\",\r\n        \"Road\",\r\n        \"Triathlon/Time Trial\",\r\n        \"BMX/Trick\",\r\n        \"Commuting\",\r\n        \"Cyclocross\",\r\n        \"Track Bike/Fixed Gear\",\r\n        \"Tandem\",\r\n        \"Adult Trike\",\r\n        \"Folding\",\r\n        \"Kids\",\r\n        \"Beach Cruiser\",\r\n        \"Recumbent\",\r\n        \"Custom\"]\r\n\r\n    const handlerChangeBikeName = async(e)=>{\r\n        setBikeName(e.target.value)\r\n    }\r\n\r\n    const handlerSelectType = async(e)=>{\r\n        setBikeType(e);\r\n    }\r\n\r\n    const handlerChangeBikePrice = async(e)=>{\r\n        if(!isNaN(e.target.value)) {\r\n            setBikePrice(e.target.value);\r\n        }else{\r\n            console.log(\"You have some symbols that mustn't be here\");\r\n            e.target.value = bike_price;\r\n        }\r\n    }\r\n\r\n    const addNewBikeHandler =  async(e)=>{\r\n        //e.preventDefault();\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({bike_name, bike_type, bike_price})\r\n        };\r\n        if(bike_name && bike_type && bike_price){\r\n            await fetch('/api/newbike', requestOptions)\r\n                .catch(err => err);\r\n            window.location.reload(false)\r\n        }else{\r\n            console.log(\"field is empty\")\r\n        }\r\n    }\r\n\r\n    const createListOfTypesBike = ()=>{\r\n        return listBikeType.map((item, index)=>{\r\n            return <Dropdown.Item eventKey={item} key={index}>{item}</Dropdown.Item>\r\n        })\r\n    }\r\n\r\n    return(\r\n            <Container className=\"create_new_bike main-block\">\r\n                <h3><span role=\"img\" aria-label=\"sx-a11y/accessible-emoji\">🤑</span>Create new rent</h3>\r\n                <Container className=\"item_menu\">\r\n                    <Row>\r\n                        <Col>\r\n                            <p className=\"d-inline\">Bike name</p>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                placeholder=\"Input bike name\"\r\n                                aria-label=\"Input bike name\"\r\n                                onChange={handlerChangeBikeName}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                            <p className=\"d-inline\">Bike type</p>\r\n                            <DropdownButton\r\n                                title={bike_type}\r\n                                onSelect={handlerSelectType}\r\n                                variant=\"light\">\r\n\r\n                                {createListOfTypesBike()}\r\n                            </DropdownButton>\r\n                        </Col>\r\n                        <Col lg=\"2\">\r\n                            <p className=\"d-inline\">Bike Price</p>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                placeholder=\"00.00\"\r\n                                aria-label=\"Input bike price\"\r\n                                onChange={handlerChangeBikePrice}\r\n                            />\r\n                        </Col >\r\n                        <Col lg=\"2\">\r\n                            <br/>\r\n                            <Button\r\n                                variant=\"success\"\r\n                                className=\"w-100\"\r\n                                onClick={addNewBikeHandler}\r\n                            >\r\n                                Submit rent\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Container>\r\n            </Container>\r\n        );\r\n}","import React, {useCallback, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\nexport function UserListRent(){\r\n    const [rentBikes, setRentBikes] = useState([]);\r\n\r\n    const handlerRentingBike = async(e)=>{\r\n        const id = e.target.getAttribute('data-id');\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({id})\r\n        };\r\n        await fetch(\"/api/availablingBike\", requestOptions);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const addRentPostione = (listRentBike)=>{\r\n        return listRentBike.map((bike, index) => {\r\n            const { bike_name, bike_type, rent_hours } = bike; //destructuring\r\n            let {bike_price} = bike;\r\n            if(rent_hours>20){\r\n                bike_price=(bike_price*rent_hours)/2;\r\n            }else{\r\n                bike_price*=rent_hours;\r\n            }\r\n            return (\r\n                <Container className=\"item_menu item_list\" key={index}>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-between\">\r\n                            <p className=\"my-auto font-italic\">{bike_name} / {bike_type} / ${bike_price}({rent_hours} hours)</p>\r\n                            <Button variant=\"danger\" className=\"rentCancel\" onClick={handlerRentingBike} data-id={bike._id}>Cancel rent</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    const getBikes = useCallback(()=>{\r\n        try{\r\n             fetch(\"/api/rentbikes\")\r\n                .then(res=>res.json())\r\n                .then(res=>setRentBikes(res))\r\n                .catch(e => e);\r\n\r\n        }catch (e){\r\n\r\n        }\r\n    },[])\r\n\r\n    useEffect( ()=>{\r\n        getBikes();\r\n    }, [getBikes]);\r\n\r\n    return(\r\n            <Container className=\"list_rent main-block\">\r\n                <h3><span role=\"img\" aria-label=\"sx-a11y/accessible-emoji\">😎</span>Your rent({rentBikes.length})</h3>\r\n                {addRentPostione(rentBikes)}\r\n            </Container>\r\n        );\r\n}","import {createContext} from 'react';\r\n\r\nfunction noop(){}\r\n\r\nexport const RideTimeContext = createContext({\r\n    hours: 1,\r\n    bikeId: null,\r\n    rending: noop\r\n});","import React, {useCallback, useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, FormControl, Row} from 'react-bootstrap';\r\nimport {RideTimeContext} from \"./Context/RideContext\";\r\n\r\nexport function UserListAvailableBike(){\r\n    const [availableBikes, setAvailableBikes] = useState([]);\r\n    const [rideHours, setRideHours] = useState(1);\r\n    const context = useContext(RideTimeContext);\r\n\r\n    const numbers = [];\r\n    for (let i = 1; i<=24;i++) numbers.push(i);\r\n    const listItems = numbers.map((number, index) =>\r\n        <option key={index}>{number}</option>\r\n    );\r\n\r\n    const handlerDeleteBike = async(e)=>{\r\n        const id = e.target.getAttribute('data-id');\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({id})\r\n        };\r\n        await fetch(\"/api/deleteBike\", requestOptions);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const handlerRentingBike = async(e)=>{\r\n        const id = e.target.getAttribute('data-id');\r\n        const requestOptions = {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({id, rideHours})\r\n        };\r\n       await fetch(\"/api/rentingBike\", requestOptions);\r\n        context.rending(rideHours, id);\r\n        window.location.reload(false);\r\n    }\r\n\r\n    const handlerSetTimeRide = async(e)=>{\r\n\r\n        setRideHours(e.target.value);\r\n    }\r\n\r\n    const addAvailableBike = (listBikes)=>{\r\n        return listBikes.map((bike) => {\r\n            const { bike_name, bike_type, bike_price } = bike; //destructuring\r\n            return (\r\n                <Container className=\"item_menu item_list\" key={bike._id}>\r\n                    <Row>\r\n                        <Col className=\"d-flex justify-content-between\">\r\n                            <p\r\n                                className=\"my-auto font-italic\">\r\n                                {bike_name} /\r\n                                {bike_type} /\r\n                                ${bike_price} /\r\n                                <FormControl as=\"select\" className=\"d-inline\" custom onChange={handlerSetTimeRide}>\r\n                                    {listItems}\r\n                                </FormControl>\r\n                            </p>\r\n                            <div >\r\n                                <Button variant=\"info\" className=\"rent\" onClick={handlerRentingBike} data-id={bike._id}>Rent</Button>\r\n                                <Button variant=\"danger\" className=\"delete\" onClick={handlerDeleteBike} data-id={bike._id}>Delete</Button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )\r\n        })\r\n\r\n    }\r\n\r\n    const getBikes = useCallback(()=>{\r\n        try{\r\n             fetch(\"/api/availablebikes\")\r\n                .then(res=>res.json())\r\n                .then(res=>setAvailableBikes(res))\r\n                .catch(e => e);\r\n\r\n        }catch (e){\r\n\r\n        }\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        getBikes();\r\n    }, [getBikes]);\r\n\r\n    return(\r\n            <Container className=\"list_bike main-block\">\r\n                <h3><span role=\"img\" aria-label=\"sx-a11y/accessible-emoji\">🚲</span>Available bicycle({availableBikes.length})</h3>\r\n                {addAvailableBike(availableBikes)}\r\n            </Container>\r\n        );\r\n}","import React, {Component} from 'react';\nimport './App.css';\nimport {CreateNewBike} from \"./components/CreateNewBike\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Container} from \"react-bootstrap\";\nimport {UserListRent} from \"./components/UserListRent\";\nimport {UserListAvailableBike} from \"./components/UserListAvailableBike\";\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      text: \"Click me!\",\n      additional: \"\", tamp: \"\",\n      active: false\n    }\n\n    this.handlerClickBtn = this.handlerClickBtn.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"/\")\n        .then(res => res.text())\n        .then(res => this.setState({additional: res, tamp: res}))\n        .catch(err => err);\n  }\n\n  handlerClickBtn(){\n    this.setState(() =>{\n          if(this.state.active){\n            return {\n              text: \"Click me!\",\n              active: !this.state.active,\n              additional: this.state.tamp\n            }\n          }else{\n            return {\n              text: \"Unclick me!\",\n              active: !this.state.active,\n              additional: \"\"\n            }\n          }\n    }\n    );\n  }\n\n\n    render() {\n    return (\n        <Container>\n          <h1>Awesome bike rental</h1>\n          <form className=\"App\" >\n            <CreateNewBike />\n          </form>\n          <UserListRent/>\n          <UserListAvailableBike/>\n        </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}